.row
  section.col-md-12
    .box.box-info
      .box-header
        i.fa.fa-line-chart
        h3.box-title Temperaturas de hoy
      .box-body
        #temperature-graph.ct-chart.ct-major-eleventh

.row
  section.col-md-4.col-xs-6
    .box.box-primary
      .box-header
        i.fa.fa-lightbulb-o
        h3.box-title Luz del escritorio
      .box-body.text-center
        .btn-group.btn-group-lg data-toggle='buttons'
          label.btn class=(enabled ? "btn-primary active" : "btn-default")
            input.simple#on name='state' autocomplete='off' value='on' type='radio' ON
          label.btn class=(enabled ? "btn-default" : "btn-primary active")
            input.simple#off name='state' autocomplete='off' value='off' type='radio' OFF

  section.col-md-4.col-xs-6
    .box.box-primary
      .box-header
        i.fa.fa-cogs
        h3.box-title Color de la luz
      .box-body.text-center
        input.input-lg#color-selector type="color"

  section.col-md-4.col-xs-12
    .box.box-info
      .box-header
        i.fa.fa-sun-o
        h3.box-title Temperatura interior
      .box-body.text-center
        span#temperature
          = temperature

javascript:
  $(function() {
    var setSwitchState = function(state) {
      if (state == 'on' || state == true) {
        var $this = $('input[name="state"][value="on"]');
      }else {
        var $this = $('input[name="state"][value="off"]');
      }
      var $parent = $this.parent();

      $parent.siblings().removeClass('btn-primary').addClass('btn-default');
      $parent.removeClass('btn-default').addClass('btn-primary');
    };

    $('input[name="state"]').on('change', function() {
      var $this = $(this);

      setSwitchState($this.val());

      if ($this.val() == 'on') {
        $.post('/rgb');
      }
      else {
        $.post('/disable');
      }
    });

    $('#color-selector').change(function() {
      $.post('/rgb?' + $.param({ color: $(this).val()}));
      setSwitchState(true);
    });

    var graphData = {
      labels: #{{today_timeseries}}.map(function(x) {
        return new Date(x * 1000).toLocaleTimeString()
      }).reverse(),
      series: [
        #{{today_temperatures}}.reverse()
      ]
    };
    var graphDataIsFresh = true;

    var graph = Chartist.Line("#temperature-graph", graphData, {
      showArea: true,
      lineSmooth: Chartist.Interpolation.simple({
        divisor: 2
      }),
      fullWidth: true,
      low: 0,
      axisX: {
        labelInterpolationFnc: function(value) {
          return "";
        }
      }
    }
    );

    var ws = new WebSocket('ws://' + window.location.host + window.location.pathname);
    ws.onmessage = function(event) {
      var message = JSON.parse(event.data);
      console.log(message);
      switch(message.type) {
        case 'lights':
          setSwitchState(message.enabled);
          break;
        case 'temperature':
          $('#temperature').text(message.value);
          if (!graphDataIsFresh) {
            graphData.labels.pop();
            graphData.series[0].pop();
          }
          graphData.labels.push(new Date(message.timestamp * 1000).toLocaleTimeString());
          graphData.series[0].push(message.value);
          graphDataIsFresh = false;
          graph.update(graphData);
          break;
        case 'today_temperatures':
          graphData.labels = message.value.map(function(x) {
            return new Date(x.timestamp * 1000).toLocaleTimeString()
          }).reverse();
          graphData.series = [message.value.map(function(x) {
            return x.temperature;
          }).reverse()];
          graphDataIsFresh = true;
          graph.update(graphData);
          break;
      }
    };
  });
